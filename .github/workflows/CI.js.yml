# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "production" ]
  pull_request:
    branches: [ "production" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    # - name: compress dist folder
      # run: |
      #   tar -czf dist.tar.gz dist/    
    - name: upload dist folder to artifact
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist
  deploy:
    runs-on: ubuntu-latest
    needs: [build] 
    env:
      SSH_PRIVATE_KEY: ${{secrets.SSH_SECRET_KEY }}  
    steps:
      - name: Download dist folder from artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: setup ssh
        run: |
          mkdir -p ~/.ssh
          echo $SSH_PRIVATE_KEY > ~/.ssh/id_rsa
          chmod -R 700 ~/.ssh
          ssh-keyscan -H sitedoctruyen.id.vn > ~/.ssh/known_hosts
        
      - name: copy dist folder to remote server
        run: |
          ssh triuq@sitedoctruyen.id.vn rm -r ~/doctruyen-fe/dist
          scp -i ~/.ssh/id_rsa dist.gzip triuq@sitedoctruyen.id.vn:/home/triuq/doctruyen-fe
      - name: build and deploy in remote server
        run: |
          ssh triuq@sitedoctruyen.id.vn << 'EOF'
          cd ~/doctruyen-fe
          tar -xzf ./dist.zip 
          rm -r dist.zip
          sudo systemctl restart nginx
            
